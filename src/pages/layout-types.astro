---
import Layout from "../components/layout.astro";
import Card from "../components/card.astro";
import RootLayout from "../layouts/root_layout.astro";
---

<RootLayout title="Layout types">
  <Layout type="12">
    <div class="grid-showcase">
      <section>
        <h2>4 column grid with 4 nested grids of 4 cards</h2>
        <Layout type="3-3-3-3">
          {
            Array.from({ length: 4 }).map((_, groupIndex) => (
              <Layout type="12">
                {Array.from({ length: 4 }).map((_, index) => (
                  <Card groupNumber={groupIndex + 1} cardNumber={index + 1} />
                ))}
              </Layout>
            ))
          }
        </Layout>
      </section>
      <section>
        <h2>3 column grid with 3 nested grids of 3 cards</h2>
        <Layout type="4-4-4">
          {
            Array.from({ length: 3 }).map((_, groupIndex) => (
              <Layout type="4-4-4">
                {Array.from({ length: 3 }).map((_, index) => (
                  <Card groupNumber={groupIndex + 1} cardNumber={index + 1} />
                ))}
              </Layout>
            ))
          }
        </Layout>
      </section>
      <section>
        <h2>3 column grid with 3 cards</h2>
        <Layout type="4-4-4">
          {
            Array.from({ length: 3 }).map((_, index) => (
              <Card groupNumber={1} cardNumber={index + 1} />
            ))
          }
        </Layout>
      </section>
      <section>
        <h2>2 column 4/8 grid with 2 cards</h2>
        <Layout type="4-8">
          {
            Array.from({ length: 2 }).map((_, index) => (
              <Card groupNumber={1} cardNumber={index + 1} />
            ))
          }
        </Layout>
      </section>
      <section>
        <h2>2 column 8/4 grid with 2 cards</h2>
        <Layout type="8-4">
          {
            Array.from({ length: 2 }).map((_, index) => (
              <Card groupNumber={1} cardNumber={index + 1} />
            ))
          }
        </Layout>
      </section>
      <section>
        <h2>2 column 8/4 grid with 2 nested 1 column grids of 2 cards</h2>
        <Layout type="8-4">
          <Layout type="12">
            {
              Array.from({ length: 2 }).map((_, index) => (
                <Card groupNumber={1} cardNumber={index + 1} />
              ))
            }
          </Layout>
          <Layout type="12">
            {
              Array.from({ length: 2 }).map((_, index) => (
                <Card groupNumber={1} cardNumber={index + 1} />
              ))
            }
          </Layout>
        </Layout>
      </section>
    </div>
  </Layout>
</RootLayout>

<style>
  .grid-showcase {
    display: grid;
    gap: 64px;
  }

  .description {
    margin: 32px 0 64px 0;
  }

  ul {
    line-height: 1.5;
  }

  .controls {
    margin-bottom: 2rem;

    h3 {
      margin: 0 0 0.5rem 0;
    }

    p {
      margin: 0 0 1rem 0;
      max-width: 64ch;
    }
  }

  .layout-buttons {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .layout-buttons button {
    padding: 0.5rem 1rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    background: white;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .layout-buttons button.active {
    background: #4a90e2;
    color: white;
    border-color: #4a90e2;
  }

  .demo-block {
    background: #f0f0f0;
    padding: 2rem;
    border-radius: 8px;
    text-align: center;
    min-height: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.25rem;
  }

  .content-controls {
    margin-top: 2rem;
  }

  .content-preview {
    margin-top: 1rem;
  }

  .preview-grid {
    display: flex;
    flex-direction: column;
    gap: 8px;
    border: 1px solid hsl(0, 0%, 84%);
    border-radius: 4px;
    line-height: 1.2;
    min-height: 24px;
    padding: 16px;
  }

  .preview-item {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1rem;
    background: #fff;
    border: 1px solid #b1bac0;
    border-radius: 4px;
    padding: 12px 16px;
  }

  .remove-item {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    border: none;
    background: none;
    color: #666;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0.25rem;
    line-height: 1;
  }

  .remove-item:hover {
    color: #ff4444;
  }

  .item-type-select {
    margin-left: auto;
    padding: 4px 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    background: white;
  }

  .add-controls {
    display: flex;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }

  .add-item {
    padding: 0.5rem 1rem;
    background: #4a90e2;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.2s ease;
  }

  .add-item:hover {
    background: #357abd;
  }
</style>
