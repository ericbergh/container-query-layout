---
const { maxCol } = Astro.props;
---

<div class={`grid max-col-${maxCol}`}><slot /></div>

<style>
  .grid {
    display: grid;
    column-gap: 32px;
    row-gap: 32px;
  }

  /* 
  544px wide container = 2 columns
  ---
  Minimum content area of 256px x 2 = 512px
  The gap takes up 32px x 1 = 32px
  512px + 32px = 544px
*/
@container grid-container (min-width: 544px) {
  .grid {
    &.max-col-2, &.max-col-4, &.max-col-3 {
      grid-template-columns: repeat(2, 1fr);
    }

    &.max-col-3 {
      .grid-container:nth-child(n+3), .content-area:nth-child(n+3) {
        grid-column: -1 / 1;
      }
    }
  }

/* 
  832px wide container = 3 columns
  ---
  Minimum content area of 256px x 3 = 768px
  The gap takes up 32px x 2 = 64px
  768px + 64px = 832px
*/
@container grid-container (min-width: 832px) {
  .grid {
    &.max-col-3 {
      grid-template-columns: repeat(3, 1fr);

      .grid-container:nth-child(n+3), .content-area:nth-child(n+3) {
        grid-column: unset;
      }
    }
  }
}

/* 
  1120px wide container = 4 columns
  ---
  Minimum content area of 256px x 4 = 1024px
  The gap takes up 32px x 3 = 96px
  1024px + 96px = 1120px
*/
@container grid-container (min-width: 1120px) {
  .grid {
    &.max-col-4 {
      grid-template-columns: repeat(4, 1fr);
    }
  }
}
</style>
